"""add integrations

Revision ID: c3d56528e99d
Revises: 806334d53d95
Create Date: 2025-09-16 16:43:37.335186

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'c3d56528e99d'
down_revision: Union[str, Sequence[str], None] = '806334d53d95'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plaid_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clerk_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('account_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('official_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('subtype', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('current_balance', sa.Float(), nullable=True),
    sa.Column('available_balance', sa.Float(), nullable=True),
    sa.Column('iso_currency_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mask', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plaid_account_clerk_user_id'), 'plaid_account', ['clerk_user_id'], unique=True)
    op.create_table('plaid_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clerk_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('item_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('institution_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plaid_item_clerk_user_id'), 'plaid_item', ['clerk_user_id'], unique=True)
    op.create_table('snaptrade_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clerk_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('account_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('connection_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('institution_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('current_balance', sa.Float(), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_snaptrade_account_clerk_user_id'), 'snaptrade_account', ['clerk_user_id'], unique=True)
    op.create_table('snaptrade_connection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clerk_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_secret', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('connection_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('brokerage_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_snaptrade_connection_clerk_user_id'), 'snaptrade_connection', ['clerk_user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_snaptrade_connection_clerk_user_id'), table_name='snaptrade_connection')
    op.drop_table('snaptrade_connection')
    op.drop_index(op.f('ix_snaptrade_account_clerk_user_id'), table_name='snaptrade_account')
    op.drop_table('snaptrade_account')
    op.drop_index(op.f('ix_plaid_item_clerk_user_id'), table_name='plaid_item')
    op.drop_table('plaid_item')
    op.drop_index(op.f('ix_plaid_account_clerk_user_id'), table_name='plaid_account')
    op.drop_table('plaid_account')
    # ### end Alembic commands ###
