import { readFile, writeFile, mkdir } from "fs/promises";
import path from "node:path";
import { fileURLToPath } from "node:url";

const OPENAPI_JSON = new URL("../../../packages/shared-contracts/openapi/openapi.json", import.meta.url);
const OUTPUT_TS = new URL("../src/core/api/generated/types.ts", import.meta.url);

async function main() {
  const raw = await readFile(OPENAPI_JSON, "utf8");
  const spec = JSON.parse(raw);
  const schemas = spec?.components?.schemas || {};
  const names = Object.keys(schemas).sort();

  const header = [
    "/**",
    " * Auto-generated from OpenAPI components.schemas.",
    " * Do not edit this file manually.",
    " */",
    "",
  ].join("\n");

  const importLine = "import type { components } from '@/src/core/api/generated/schema';";

  const body = names
    .map((name) => `export type ${name} = components['schemas']['${name}'];`)
    .join("\n");

  const content = `${header}\n${importLine}\n\n${body}\n`;

  const outPath = fileURLToPath(OUTPUT_TS);
  await mkdir(path.dirname(outPath), { recursive: true });
  await writeFile(outPath, content, "utf8");
  // eslint-disable-next-line no-console
  console.log(`Generated ${names.length} type aliases -> ${OUTPUT_TS.pathname}`);
}

main().catch((err) => {
  // eslint-disable-next-line no-console
  console.error(err);
  process.exit(1);
});


